{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/naveen/theScore/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/naveen/theScore\",\"filename\":\"/Users/naveen/theScore/test/users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/naveen/theScore\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/naveen/theScore/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/naveen/theScore",
      "filename": "/Users/naveen/theScore/test/users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/naveen/theScore",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/naveen/theScore/test/users.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/naveen/theScore/test/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/naveen/theScore/test/",
        "sourceFileName": "users.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _supertest = _interopRequireDefault(require(\"supertest\"));\n\nvar _chai = require(\"chai\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar request = (0, _supertest[\"default\"])('http://api.cfl.ca/');\ndescribe('Step-1:', function () {\n  it('The LEAGUE and SEASON under test', function () {\n    var url = 'v1/players?include=points&key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n    request.get(url).end(function (err, res) {\n      console.log(\"The LEAGUE is CFL\");\n      console.log(\"The SEASON is 2015\");\n    });\n  });\n});\ndescribe('Step-2', function () {\n  it('fetch all available player scoring stats for the LEAGUE=CFL and SEASON=2015', function () {\n    var url = 'v1/players?include=points&key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n    request.get(url).end(function (err, res) {\n      console.log(err);\n      console.log(res.body);\n      res.body.data.forEach(function (data) {\n        if (data.rookie_year == 2015) {\n          console.log(data.first_name + ' ' + data.last_name);\n        }\n      });\n    });\n  });\n});\ndescribe('Step-4', function () {\n  it('fetch the standings of teams for the season 2015', function () {\n    var url = 'v1/standings/2015?key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n    return request.get(url).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n      console.log(res.body);\n    });\n  });\n});\ndescribe('Step-6', function () {\n  it('fetch the list of games for the season 2015', function () {\n    var url = 'v1/games/2015?key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n    return request.get(url).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n      console.log(res.body);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJlcXVlc3QiLCJkZXNjcmliZSIsIml0IiwidXJsIiwiZ2V0IiwiZW5kIiwiZXJyIiwicmVzIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJkYXRhIiwiZm9yRWFjaCIsInJvb2tpZV95ZWFyIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInRoZW4iLCJ0byIsIm5vdCIsImJlIiwiZW1wdHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7Ozs7QUFEQSxJQUFNQSxPQUFPLEdBQUcsMkJBQVUsb0JBQVYsQ0FBaEI7QUFHQUMsUUFBUSxDQUFDLFNBQUQsRUFBWSxZQUFPO0FBQ3ZCQyxFQUFBQSxFQUFFLENBQUMsa0NBQUQsRUFBcUMsWUFBTTtBQUN6QyxRQUFNQyxHQUFHLEdBQUcsZ0VBQVo7QUFDQUgsSUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVlELEdBQVosRUFBaUJFLEdBQWpCLENBQXFCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWjtBQUNBRCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvQkFBWjtBQUdILEtBTEQ7QUFNSCxHQVJDLENBQUY7QUFTSCxDQVZPLENBQVI7QUFZQVIsUUFBUSxDQUFDLFFBQUQsRUFBVyxZQUFPO0FBQ3RCQyxFQUFBQSxFQUFFLENBQUMsNkVBQUQsRUFBZ0YsWUFBTTtBQUNwRixRQUFNQyxHQUFHLEdBQUcsZ0VBQVo7QUFDQUgsSUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVlELEdBQVosRUFBaUJFLEdBQWpCLENBQXFCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBWjtBQUNBRSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsR0FBRyxDQUFDRyxJQUFoQjtBQUNBSCxNQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBVCxDQUFjQyxPQUFkLENBQXNCLFVBQUNELElBQUQsRUFBVTtBQUM1QixZQUFHQSxJQUFJLENBQUNFLFdBQUwsSUFBa0IsSUFBckIsRUFBMEI7QUFDMUJMLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxJQUFJLENBQUNHLFVBQUwsR0FBZ0IsR0FBaEIsR0FBb0JILElBQUksQ0FBQ0ksU0FBckM7QUFDSDtBQUNBLE9BSkQ7QUFNSCxLQVREO0FBVUgsR0FaQyxDQUFGO0FBYUgsQ0FkTyxDQUFSO0FBZ0JBZCxRQUFRLENBQUMsUUFBRCxFQUFXLFlBQU87QUFDdEJDLEVBQUFBLEVBQUUsQ0FBQyxrREFBRCxFQUFxRCxZQUFNO0FBQ3JELFFBQU1DLEdBQUcsR0FBRyx3REFBWjtBQUNBLFdBQU9ILE9BQU8sQ0FBQ0ksR0FBUixDQUFZRCxHQUFaLEVBQWlCYSxJQUFqQixDQUFzQixVQUFDVCxHQUFELEVBQVM7QUFDbEMsd0JBQU9BLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFoQixFQUFzQk0sRUFBdEIsQ0FBeUJDLEdBQXpCLENBQTZCQyxFQUE3QixDQUFnQ0MsS0FBaEM7QUFDQVosTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQUcsQ0FBQ0csSUFBaEI7QUFDSCxLQUhNLENBQVA7QUFJTixHQU5BLENBQUY7QUFPSCxDQVJPLENBQVI7QUFVQVQsUUFBUSxDQUFDLFFBQUQsRUFBVyxZQUFPO0FBQ3RCQyxFQUFBQSxFQUFFLENBQUMsNkNBQUQsRUFBZ0QsWUFBTTtBQUNwRCxRQUFNQyxHQUFHLEdBQUcsb0RBQVo7QUFDQSxXQUFPSCxPQUFPLENBQUNJLEdBQVIsQ0FBWUQsR0FBWixFQUFrQmEsSUFBbEIsQ0FBdUIsVUFBQ1QsR0FBRCxFQUFTO0FBQ25DLHdCQUFPQSxHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBaEIsRUFBc0JNLEVBQXRCLENBQXlCQyxHQUF6QixDQUE2QkMsRUFBN0IsQ0FBZ0NDLEtBQWhDO0FBQ0FaLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFHLENBQUNHLElBQWhCO0FBQ0gsS0FITSxDQUFQO0FBSUgsR0FOQyxDQUFGO0FBT0gsQ0FSTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYXZlZW4vdGhlU2NvcmUvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3VwZXJ0ZXN0IGZyb20gJ3N1cGVydGVzdCc7XG5jb25zdCByZXF1ZXN0ID0gc3VwZXJ0ZXN0KCdodHRwOi8vYXBpLmNmbC5jYS8nKTtcbmltcG9ydCB7ZXhwZWN0fSBmcm9tICdjaGFpJztcblxuZGVzY3JpYmUoJ1N0ZXAtMTonLCAoKSAgPT4ge1xuICAgIGl0KCdUaGUgTEVBR1VFIGFuZCBTRUFTT04gdW5kZXIgdGVzdCcsICgpID0+IHtcbiAgICAgICAgY29uc3QgdXJsID0gJ3YxL3BsYXllcnM/aW5jbHVkZT1wb2ludHMma2V5PVQ4TXY5QlJEZGNCN2JNUVVzUXZIcXRDR1Bld0g1eThwJztcbiAgICAgICAgcmVxdWVzdC5nZXQodXJsKS5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlRoZSBMRUFHVUUgaXMgQ0ZMXCIpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJUaGUgU0VBU09OIGlzIDIwMTVcIik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuXG5kZXNjcmliZSgnU3RlcC0yJywgKCkgID0+IHtcbiAgICBpdCgnZmV0Y2ggYWxsIGF2YWlsYWJsZSBwbGF5ZXIgc2NvcmluZyBzdGF0cyBmb3IgdGhlIExFQUdVRT1DRkwgYW5kIFNFQVNPTj0yMDE1JywgKCkgPT4ge1xuICAgICAgICBjb25zdCB1cmwgPSAndjEvcGxheWVycz9pbmNsdWRlPXBvaW50cyZrZXk9VDhNdjlCUkRkY0I3Yk1RVXNRdkhxdENHUGV3SDV5OHAnO1xuICAgICAgICByZXF1ZXN0LmdldCh1cmwpLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuYm9keSk7XG4gICAgICAgICAgICByZXMuYm9keS5kYXRhLmZvckVhY2goKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICBpZihkYXRhLnJvb2tpZV95ZWFyPT0yMDE1KXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmZpcnN0X25hbWUrJyAnK2RhdGEubGFzdF9uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ1N0ZXAtNCcsICgpICA9PiB7XG4gICAgaXQoJ2ZldGNoIHRoZSBzdGFuZGluZ3Mgb2YgdGVhbXMgZm9yIHRoZSBzZWFzb24gMjAxNScsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9ICd2MS9zdGFuZGluZ3MvMjAxNT9rZXk9VDhNdjlCUkRkY0I3Yk1RVXNRdkhxdENHUGV3SDV5OHAnO1xuICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QuZ2V0KHVybCkudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLm5vdC5iZS5lbXB0eTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuYm9keSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgfSk7XG59KTsgIFxuXG5kZXNjcmliZSgnU3RlcC02JywgKCkgID0+IHtcbiAgICBpdCgnZmV0Y2ggdGhlIGxpc3Qgb2YgZ2FtZXMgZm9yIHRoZSBzZWFzb24gMjAxNScsICgpID0+IHtcbiAgICAgICAgY29uc3QgdXJsID0gJ3YxL2dhbWVzLzIwMTU/a2V5PVQ4TXY5QlJEZGNCN2JNUVVzUXZIcXRDR1Bld0g1eThwJztcbiAgICAgICAgcmV0dXJuIHJlcXVlc3QuZ2V0KHVybCkuIHRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLm5vdC5iZS5lbXB0eTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5ib2R5KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "request",
        "describe",
        "it",
        "url",
        "get",
        "end",
        "err",
        "res",
        "console",
        "log",
        "body",
        "data",
        "forEach",
        "rookie_year",
        "first_name",
        "last_name",
        "then",
        "to",
        "not",
        "be",
        "empty"
      ],
      "mappings": ";;AAAA;;AAEA;;;;AADA,IAAMA,OAAO,GAAG,2BAAU,oBAAV,CAAhB;AAGAC,QAAQ,CAAC,SAAD,EAAY,YAAO;AACvBC,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AACzC,QAAMC,GAAG,GAAG,gEAAZ;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAYD,GAAZ,EAAiBE,GAAjB,CAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAGH,KALD;AAMH,GARC,CAAF;AASH,CAVO,CAAR;AAYAR,QAAQ,CAAC,QAAD,EAAW,YAAO;AACtBC,EAAAA,EAAE,CAAC,6EAAD,EAAgF,YAAM;AACpF,QAAMC,GAAG,GAAG,gEAAZ;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAYD,GAAZ,EAAiBE,GAAjB,CAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAH,MAAAA,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAcC,OAAd,CAAsB,UAACD,IAAD,EAAU;AAC5B,YAAGA,IAAI,CAACE,WAAL,IAAkB,IAArB,EAA0B;AAC1BL,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACG,UAAL,GAAgB,GAAhB,GAAoBH,IAAI,CAACI,SAArC;AACH;AACA,OAJD;AAMH,KATD;AAUH,GAZC,CAAF;AAaH,CAdO,CAAR;AAgBAd,QAAQ,CAAC,QAAD,EAAW,YAAO;AACtBC,EAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AACrD,QAAMC,GAAG,GAAG,wDAAZ;AACA,WAAOH,OAAO,CAACI,GAAR,CAAYD,GAAZ,EAAiBa,IAAjB,CAAsB,UAACT,GAAD,EAAS;AAClC,wBAAOA,GAAG,CAACG,IAAJ,CAASC,IAAhB,EAAsBM,EAAtB,CAAyBC,GAAzB,CAA6BC,EAA7B,CAAgCC,KAAhC;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAHM,CAAP;AAIN,GANA,CAAF;AAOH,CARO,CAAR;AAUAT,QAAQ,CAAC,QAAD,EAAW,YAAO;AACtBC,EAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACpD,QAAMC,GAAG,GAAG,oDAAZ;AACA,WAAOH,OAAO,CAACI,GAAR,CAAYD,GAAZ,EAAkBa,IAAlB,CAAuB,UAACT,GAAD,EAAS;AACnC,wBAAOA,GAAG,CAACG,IAAJ,CAASC,IAAhB,EAAsBM,EAAtB,CAAyBC,GAAzB,CAA6BC,EAA7B,CAAgCC,KAAhC;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAHM,CAAP;AAIH,GANC,CAAF;AAOH,CARO,CAAR",
      "sourceRoot": "/Users/naveen/theScore/test/",
      "sourcesContent": [
        "import supertest from 'supertest';\nconst request = supertest('http://api.cfl.ca/');\nimport {expect} from 'chai';\n\ndescribe('Step-1:', ()  => {\n    it('The LEAGUE and SEASON under test', () => {\n        const url = 'v1/players?include=points&key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n        request.get(url).end((err, res) => {\n            console.log(\"The LEAGUE is CFL\");\n            console.log(\"The SEASON is 2015\");\n            \n            \n        });\n    });\n});\n\ndescribe('Step-2', ()  => {\n    it('fetch all available player scoring stats for the LEAGUE=CFL and SEASON=2015', () => {\n        const url = 'v1/players?include=points&key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n        request.get(url).end((err, res) => {\n            console.log(err);\n            console.log(res.body);\n            res.body.data.forEach((data) => {\n                if(data.rookie_year==2015){\n                console.log(data.first_name+' '+data.last_name);\n            }\n            })\n            \n        });\n    });\n});\n\ndescribe('Step-4', ()  => {\n    it('fetch the standings of teams for the season 2015', () => {\n            const url = 'v1/standings/2015?key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n            return request.get(url).then((res) => {\n                expect(res.body.data).to.not.be.empty;\n                console.log(res.body);\n            });\n     });\n});  \n\ndescribe('Step-6', ()  => {\n    it('fetch the list of games for the season 2015', () => {\n        const url = 'v1/games/2015?key=T8Mv9BRDdcB7bMQUsQvHqtCGPewH5y8p';\n        return request.get(url). then((res) => {\n            expect(res.body.data).to.not.be.empty;\n            console.log(res.body);\n        });\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1619204247532
  }
}